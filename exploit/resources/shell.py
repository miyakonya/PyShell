# coding:UTF-8
# Python 3.10.6
# 此文件用于连接shell

import socket
import threading
import sys
import os
from font import print_error, print_success, print_info


class Shell:
    def __init__(self, host, port):
        self.host = host
        self.port = port
        self.sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    def connect(self):
        try:
            self.sock.connect((self.host, self.port))
            print_success(f"Get shell!")
        except Exception:
            print_error(f"The exploit program has been successfully utilized but cannot obtain the shell")
            sys.exit(1)

    def receive_output(self):
        try:
            while True:
                data = self.sock.recv(4096)
                if not data:
                    break
                os.write(sys.stdout.fileno(), data)
        except:
            pass

    def send_input(self):
        try:
            while True:
                data = os.read(sys.stdin.fileno(), 4096)
                if not data:
                    break
                # \n 可以用于Windows和Linux，作为换行
                # \r 在Linux中会出问题
                data = data.decode().replace("\r", "").encode()
                self.sock.send(data)
        except:
            pass

    def start(self):
        self.connect()
        # 打开两个线程用于接收和发送数据
        output_thread = threading.Thread(target=self.receive_output)
        input_thread = threading.Thread(target=self.send_input)

        output_thread.daemon = True
        input_thread.daemon = True

        output_thread.start()
        input_thread.start()

        try:
            while output_thread.is_alive() and input_thread.is_alive():
                pass
        except KeyboardInterrupt:
            print_info("Closing connection...")
            self.sock.close()
            sys.exit(0)


def open(host, port):
    Shell(host, port).start()
